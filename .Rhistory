scale_linetype_manual(values=c(1,3)) +
scale_size_continuous(range = c(4,4))
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
g + scale_shape_manual(values = c(11, 12)) +
scale_colour_manual(values=c("red", "blue")) +
scale_fill_manual(values=c("red", "blue")) +
scale_linetype_manual(values=c(1,3)) +
scale_size_continuous(range = c(4,4))
g + scale_shape_manual(values = c(11, 12)) +
scale_colour_manual(values=c("red", "blue")) +
scale_fill_manual(values=c("red", "blue")) +
scale_linetype_manual(values=c(1,3)) +
scale_size_continuous(range = c(1,2))
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
g + scale_shape_manual(values = c(11, 12)) +
scale_colour_manual(values=c("red", "blue")) +
scale_fill_manual(values=c("red", "blue")) +
scale_linetype_manual(values=c(1,3)) +
scale_size_continuous(range = c(1,2))
g + scale_shape_manual(values = c(11, 12)) +
scale_colour_manual(values=c("red", "blue")) +
scale_fill_manual(values=c("red", "blue")) +
scale_linetype_manual(values=c(1,3)) +
scale_size_continuous(range = c(10,20))
g + scale_shape_manual(values = c(11, 12)) +
scale_colour_manual(values=c("red", "blue")) +
scale_fill_manual(values=c("red", "blue")) +
scale_linetype_manual(values=c(1,3)) +
scale_size(range = c(2,3))
g + scale_shape_manual(values = c(11, 12)) +
scale_colour_manual(values=c("red", "blue")) +
scale_fill_manual(values=c("red", "blue")) +
scale_linetype_manual(values=c(1,3)) +
scale_size(range = c(20,30))
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
?geom_ribbon
?scale
?scale_alpha
g + scale_shape_manual(values = c(11, 12))
install.packages("gridExtra")
g$layers
g$layers[[2]]
g$layers[[2]]$aes_params
g4
g4 <- g
g4$layers[[2]]$aes_params$size <- 1
g
g4
g4$layers[[2]]$aes_params$size
source('~/github/iNEXT/R/ggiNEXT.R')
g <- ggiNEXT(out1, type=1, color.var = "site")
g
g$layers[[1]]$aes_params$size <- 7
g
g <- ggiNEXT(out1, type=1, color.var = "site")
g4 <- g
g3$layers[[1]]$aes_params$size <- 7
g3 <- g
g3$layers[[1]]$aes_params$size <- 7
g3
g4 <- g
g4$layers[[2]]$aes_params$size <- 1
g4
g4 <- g
g4$layers[[2]]$aes_params$size <- 3
g4
grid.arrange(g3, g4, ncol=2)
library(gridExtra)
grid.arrange(g3, g4, ncol=2)
g <- ggiNEXT(out1, type=1, color.var = "site")
g
g3 <- g
g3$layers[[1]]$aes_params$size <- 7
g3
g4 <- g
g4$layers[[2]]$aes_params$size <- 3
g4
g
g$layers[[1]]
g$layers[[1]]$aes_params
g
ggplot_build
ggplot_build(g)
g <- ggiNEXT(out1, type=1, color.var = "site")
build <- ggplot_build(g)
gt <- ggplot_gtable(build)
gt
grid.draw(gt)
library(grid)
grid.draw(gt)
gt$layout["1"]
gt$layout$name
build$data
g4 <<- g
g4$layers[[2]]$aes_params$size <- 3
g
g4
g4 <- g1
build <- ggplot_build(g)
build$data[[1]]
build$data[[1]]$size=7
gt <- ggplot_gtable(build)
grid.draw(gt)
g
ggplotGrob()
?ggplotGrob()
ggplotGrob(gt)
ggplotGrob(g3)
build <- ggplot_build(g)
ggplotGrob(build)
ggplotGrob
ggplotGrob(g)
?ggplot_build
layer_data(g)
g
layer_data(g)
layer_grob(g)
layer_scales(g)
layer_scales(g)[[1]]
layer_data(g)
layer_data(g)[[2]]
g
g3.build <- ggplot_build(g)
g3.build$data
g3.build[[1]]
g3.build$data[[1]]
?grid.draw
class(gt)
?ggplot2
?ggplot
?ggplot_build
print.ggplot(gt)
print(g3.build)
plot(g3.build)
g3.build <- ggplot_build(g)
g3.build$data[[1]]$size <- 10
invisible(g3.build)
g3.build
g3.build <- ggplot_build(g)
g3.build$data[[1]]$size <- 10
gt <- ggplot_gtable(g3.build)
g3 <- grid.draw(gt)
g3
g <- ggiNEXT(out1, type=1, color.var = "site")
g3.build <- ggplot_build(g)
g3.build$data[[1]]$size <- 10
gt <- ggplot_gtable(g3.build)
ggrid.draw(gt)
grid.draw(gt)
g
arrangeGrob
arrangeGrob(gt,gt)
arrangeGrob(gt,gt) %>% grid.draw()
library(magrittr)
arrangeGrob(gt,gt) %>% grid.draw()
arrangeGrob(gt,gt, ncol=2) %>% grid.draw()
class(gt)
class(g3.build)
gb3 <- ggplot_build(g)
gb3$data[[1]]$size <- 10
grid.draw(gt3)
gb3 <- ggplot_build(g)
gb3$data[[1]]$size <- 10
gt3 <- ggplot_gtable(gb3)
grid.draw(gt3)
gb4$data[[2]]
gb4 <- ggplot_build(g)
gb4$data[[2]]
?grid.draw
gb4 <- ggplot_build(g)
gb4$data[[2]]$size <- 3
gt4 <- ggplot_gtable(gb4)
gb3 <- ggplot_build(g)
gb3$data[[1]]$size <- 10
gt3 <- ggplot_gtable(gb3)
grid.arrange(gt3, gt4, ncol=2)
?grid.arrange
rectGrob
?theme_light
methods("theme_")
??theme_
g
g + theme_classic()
?theme_grey
help(theme_grey)
g + theme_linedraw()
g + theme_classic()
g + theme_dark()
g + theme_void()
g + theme_classic()
g + theme_linedraw()
g + theme_bw()
g + theme_linedraw()
install.packages("ggthemes")
library(ggthemes)
g7 <- g + theme_hc()
g7
g+theme_hc(bgcolor = "darkunica") +
scale_colour_hc("darkunica")
g7 <- g + theme_hc()
g7
g
g + theme_hc() + scale_colour_hc("darkunica")
g7 <- g + theme_hc(bgcolor = "darkunica") + scale_colour_hc("darkunica")
g7
g+theme_tufte()
g+theme_economist()
g+theme_economist() + scale_colour_economist()
?scale_colour_economist
g + theme_bw(base_size = 18) +
scale_fill_grey(start = 0, end = .4) +
scale_colour_grey(start = .2, end = .2)
theme(legend.position="bottom",
legend.title=element_blank())
g + theme_bw(base_size = 18) +
scale_fill_grey(start = 0, end = .4) +
scale_colour_grey(start = .2, end = .2) +
theme(legend.position="bottom",
legend.title=element_blank())
g + theme_tufte() +       scale_fill_grey(start = 0, end = .4) +
scale_colour_grey(start = .2, end = .2)
g + theme_tufte() +
scale_fill_grey(start = 0, end = .4) +
scale_colour_grey(start = .2, end = .2) +
theme(legend.position="bottom",
legend.title=element_blank())
g + theme_tufte(base_size = 12) +
scale_fill_grey(start = 0, end = .4) +
scale_colour_grey(start = .2, end = .2) +
theme(legend.position="bottom",
legend.title=element_blank())
fortify(out)
out <- iNEXT(spider, q=0, datatype="abundance")
g <- ggiNEXT(out, type=1, color.var = "site")
g
fortify(out)
fortify(out, type=1)
CRANpkg("iNEXT")
?fortify
?print.ar
fortify.iNEXT()
?fortify.iNEXT
?fortify
head(fortify(out, type=1)
)
df <- fortify(out, type=1)
ggplot(df, aes(x=x, y=y, colour=site)) + geom_line()
ggplot(df, aes(x=x, y=y, colour=site)) + geom_line() +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=factor(col), colour=NULL), alpha=0.2)
ggplot(df, aes(x=x, y=y, colour=site)) + geom_line() +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr))
ggplot(df, aes(x=x, y=y, colour=site)) + geom_line() +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=factor(site), colour=NULL), alpha=0.2)
ggplot(df, aes(x=x, y=y, colour=site)) + geom_line() +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=site, colour=NULL), alpha=0.2)
ggplot(df, aes(x=x, y=y, colour=site)) + geom_line() +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=site, colour=NULL), alpha=0.2) +
labs(x="Number of sampling units", y="Species diversity")
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_line(aes(linetype=method)) +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=site, colour=NULL), alpha=0.2) +
labs(x="Number of sampling units", y="Species diversity")
head(df)
df.sub <- df[which(df$method=="observed"),]
df.point <- df[which(df$method=="observed"),]
df.line <- df[which(df$method!="observed"),]
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point)
geom_line(aes(linetype=method), size=1.5, data=df.line) +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=site, colour=NULL), alpha=0.2) +
labs(x="Number of sampling units", y="Species diversity")
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point)
geom_line(aes(linetype=method), lwd=1.5, data=df.line)
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point) +
geom_line(aes(linetype=method), lwd=1.5, data=df.line)
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point) +
geom_line(aes(linetype=method), lwd=1.5, data=df.line) +
scale_linetype_manual(values=c(2,1))
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point) +
geom_line(aes(linetype=method), lwd=1.5, data=df.line) +
scale_linetype_discrete(values=c(2,1), direction=-1)
?scale_linetype_stata
df.line$method
df.line %>% head
df.point <- df[which(df$method=="observed"),]
df.line <- df[which(df$method!="observed"),]
df.line$method <- factor(df.line$method,
c("interpolated", "extrapolated"),
c("interpolation", "extrapolation")))
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point) +
geom_line(aes(linetype=method), lwd=1.5, data=df.line) +
scale_linetype()
df.point <- df[which(df$method=="observed"),]
df.line <- df[which(df$method!="observed"),]
df.line$method <- factor(df.line$method,
c("interpolated", "extrapolated"),
c("interpolation", "extrapolation")))
df.line$method
df.line$method <- factor(df.line$method,
c("interpolated", "extrapolated"),
c("interpolation", "extrapolation"))
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point) +
geom_line(aes(linetype=method), lwd=1.5, data=df.line) +
scale_linetype()
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point) +
geom_line(aes(linetype=method), lwd=1.5, data=df.line) +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=site, colour=NULL), alpha=0.2) +
labs(x="Number of sampling units", y="Species diversity")
ggplot(df, aes(x=x, y=y, colour=site)) +
geom_point(aes(shape=site), size=5, data=df.point) +
geom_line(aes(linetype=method), lwd=1.5, data=df.line) +
geom_ribbon(aes(ymin=y.lwr, ymax=y.upr,
fill=site, colour=NULL), alpha=0.2) +
labs(x="Number of sampling units", y="Species diversity") +
theme(legend.position = "bottom",
legend.title=element_blank(),
text=element_text(size=18))
library(devtools)
build_vignettes()
library(iNEXT)
build_vignettes()
?print.ts
?print.ggplot
?print.ftable
?print.kmeans
print.condition()
?print.condition
build_vignettes()
CRANpkg("ggplot2")
CRANpkg("ggthemes")
CRANpkg("iNEXT")
build_vignettes()
print()
print
?print
g
out1 <- iNEXT(spider$Girdled, q=0, datatype="abundance")
plot(out1)
build_vignettes()
vignette(package="iNEXT")
vignette(package="iNEXT")
library(iNEXT)
vignette("graphics",package="iNEXT")
build_vignettes()
library(rmarkdown)
render("README.Rmd", output_file = "index.html")
render("README.Rmd", output_format = "html_document",output_file = "index.html")
render("README.Rmd", output_format = "html_vigmette", output_file = "index.html")
render("README.Rmd", output_format = "html_vignette", output_file = "index.html")
render("README.Rmd", output_format = "html_document",output_file = "index.html")
render("README.Rmd", output_format = "html_document",output_file = "index.html")
out1 <- iNEXT(spider, q=0, datatype="abundance",se=FALSE)
fortify(out1)
ggiNEXT(out1,type=1,se=F)
source('~/github/iNEXT/R/ggiNEXT.R')
ggiNEXT(out1,type=1,se=F)
ggiNEXT(out1,type=1)
source('~/github/iNEXT/R/ggiNEXT.R')
ggiNEXT(out1,type=1)
source('~/github/iNEXT/R/ggiNEXT.R')
source('~/github/iNEXT/R/ggiNEXT.R')
ggiNEXT(out1,type=1)
source('~/github/iNEXT/R/ggiNEXT.R')
ggiNEXT(out1,type=1)
source('~/github/iNEXT/R/ggiNEXT.R')
ggiNEXT(out1,type=1)
source('~/github/iNEXT/R/ggiNEXT.R')
render("README.Rmd", output_format = "html_document",output_file = "index.html")
render("README.Rmd", output_format = "html_document",output_file = "index.html")
n_a <- 51794
k_a <- 4425
n_a <- 51696
k_a <- 4996
runs <- 10000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
n_a <- 51794
k_a <- 4425
n_b <- 51696
k_b <- 4996
runs <- 10000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
mean(a<b)
mean(a.samples<b.samples)
a.samples
b.samples
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
sum(a.samples > b.samples)/runs
runs <- 100000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
sum(a.samples > b.samples)/runs
a.samples
b.samples
n_a <- 3945
k_a <- 403
n_b <- 2981
k_b <- 366
runs <- 100000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
sum(a.samples > b.samples)/runs
sum(a.samples < b.samples)/runs
a.samples
b.samples
n_a <- 2945
k_a <- 403
n_b <- 2981
k_b <- 366
runs <- 100000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
sum(a.samples > b.samples)/runs
sum(a.samples < b.samples)/runs
n_a <- 2945
k_a <- 423
n_b <- 2981
k_b <- 366
runs <- 100000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
sum(a.samples < b.samples)/runs
n_a <- 2981
k_a <- 343
n_b <- 2945
k_b <- 423
runs <- 100000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
sum(a.samples < b.samples)/runs
k_a/n_a
k_b/n_b
n_b <- 2945
k_b <- 403
runs <- 100000
a.samples <- rbeta(runs, k_a+1, n_a-k_a+1)
b.samples <- rbeta(runs, k_b+1, n_b-k_b+1)
sum(a.samples < b.samples)/runs
sum(a.samples > b.samples)/runs
403/2945
n_a <- 2981
k_a <- 343
n_b <- 2945
k_b <- 403
runs <- 100000
?rbeta
qbeta((k_a+1)/(n_a-k_a+1),k_a+1, n_a-k_a+1)
qbeta((k_b+1)/(n_b-k_b+1),k_b+1, n_b-k_b+1)
sum(a.samples > b.samples)/runs
pbeta((k_a+1)/(n_a-k_a+1),k_a+1, n_a-k_a+1)
pbeta((k_b+1)/(n_b-k_b+1),k_b+1, n_b-k_b+1)
hist(a.samples)
(k_a+1)/(n_a-k_a+1)
qbeta((k_a+1)/(n_a-k_a+1),k_a+1, n_a-k_a+1)
qbeta((k_b+1)/(n_b-k_b+1),k_b+1, n_b-k_b+1)
