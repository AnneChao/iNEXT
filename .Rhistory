Fun <- function(x){
n <- sum(x)
fk <- sapply(1:10, function(k) sum(x==k))
f1 <- fk[1]
f2 <- fk[2]
Sobs <- sum(x>0)
f0.hat <- ifelse(f2 == 0, (n - 1) / n * f1 * (f1 - 1) / 2, (n - 1) / n * f1 ^ 2/ 2 / f2)  #estimation of unseen species via Chao1
Shat <- Sobs + round(f0hat, 2)
A <- ifelse(f1>0, n*f0.hat/(n*f0.hat+f1), 1)
Chat <- round(1 - f1/n*A, 4)
c(n, Sobs, Shat, Chat, fk)
}
out <- t(apply(as.matrix(dat), 2, Fun))
dat=x
Fun <- function(x){
n <- sum(x)
fk <- sapply(1:10, function(k) sum(x==k))
f1 <- fk[1]
f2 <- fk[2]
Sobs <- sum(x>0)
f0.hat <- ifelse(f2 == 0, (n - 1) / n * f1 * (f1 - 1) / 2, (n - 1) / n * f1 ^ 2/ 2 / f2)  #estimation of unseen species via Chao1
Shat <- Sobs + round(f0hat, 2)
A <- ifelse(f1>0, n*f0.hat/(n*f0.hat+f1), 1)
Chat <- round(1 - f1/n*A, 4)
c(n, Sobs, Shat, Chat, fk)
}
out <- t(apply(as.matrix(dat), 2, Fun))
summary.Ind <- function(dat){
Fun <- function(x){
n <- sum(x)
fk <- sapply(1:10, function(k) sum(x==k))
f1 <- fk[1]
f2 <- fk[2]
Sobs <- sum(x>0)
f0.hat <- ifelse(f2 == 0, (n - 1) / n * f1 * (f1 - 1) / 2, (n - 1) / n * f1 ^ 2/ 2 / f2)  #estimation of unseen species via Chao1
Shat <- Sobs + round(f0.hat, 2)
A <- ifelse(f1>0, n*f0.hat/(n*f0.hat+f1), 1)
Chat <- round(1 - f1/n*A, 4)
c(n, Sobs, Shat, Chat, fk)
}
out <- t(apply(as.matrix(dat), 2, Fun))
colnames(out) <- c("n", "S.obs", "S.hat", "C.hat", paste("f",1:10, sep=""))
as.data.frame(out, row.names="")
}
summary.Sam <- function(dat){
Fun <- function(x){
nT <- x[1]
x <- x[-1]
U <- sum(x)
Qk <- sapply(1:10, function(k) sum(x==k))
Q1 <- Qk[1]
Q2 <- Qk[2]
Sobs <- sum(x>0)
Q0.hat <- ifelse(Q2 == 0, (nT - 1) / nT * Q1 * (Q1 - 1) / 2, (nT - 1) / nT * Q1 ^ 2/ 2 / Q2)  #estimation of unseen species via Chao2
A <- ifelse(Q1>0, nT*Q0.hat/(nT*Q0.hat+Q1), 1)
Shat <- Sobs + round(Q0.hat, 2)
Chat <- round(1 - Q1/U*A,4)
out <- c(nT, U, Sobs, Shat, Chat, Qk)
#colnames(out) <- c("T", "U", "Sobs", "Shat", "Chat", paste("Q",1:10, sep=""))
out
}
out <- t(apply(as.matrix(dat), 2, Fun))
colnames(out) <- c("T", "U", "S.obs", "S.hat", "C.hat", paste("Q",1:10, sep=""))
as.data.frame(out)
}
out = iNEXT(x, q=0, datatype="abundance", endpoint=200, nboot=500)
plot(out, style="N2D")
plot(out, style="SC2D")
plot(out, style="SC2D")
out
plot(out, style="N2SC")
#install.package('devtools')
library(devtools) install_github('iNEXT','JohnsonHsieh')
library(iNEXT)
#install.package('devtools')
library(devtools) install_github('iNEXT','JohnsonHsieh')
library(iNEXT)
=======
rmarkdown::render("README.Rmd",output_format = "md_document")
rmarkdown::render("README.Rmd",output_format = "md_document")
ggiNEXT(out, type=3, facet.var="order")
library(devtools)
install_github('JohnsonHsieh/iNEXT')
library(iNEXT)
ggiNEXT(out, type=3, facet.var="site")
ggiNEXT(out, type=3, facet.var="order")
ggiNEXT(out, type=3, facet.var="order", color.var="site")
ggiNEXT
rmarkdown::render("README.Rmd",output_format = "md_document")
library(iNEXT)
ggiNEXT(out, type=3, facet.var="order", color.var="site")
rmarkdown::render("README.Rmd",output_format = "md_document")
library(iNEXT)
install_github('JohnsonHsieh/iNEXT')
library(iNEXT)
```{r ex1, echo=FALSE}
data(spider)
out <- iNEXT(spider, q=c(0, 1, 2), datatype="abundance", endpoint=500)
ggiNEXT(out, type=1, facet.var="site")
ggiNEXT(out, type=1, facet.var="order", color.var="site")
ggiNEXT
rm(ggiNEXT)
ggiNEXT(out, type=1, facet.var="site")
rmarkdown::render("README.Rmd",output_format = "md_document")
>>>>>>> d66994dc2593c58f22db21b3f37a853162b70b9e
data(dune)
vagan::data(dune)
install.packages("vegan")
vagan::data(dune)
vegan::data(dune)
data(dune, package = "vegan")
dune
?dune
BCI
data(BCI)
data(BCI, package = "vegan")
dim(BCI)
BCI
raw2freq <- function(x){
if(class(x) == "data.frame" | class(x) == "matrix"){
nT <- ncol(x)
y <- rowSums(x)
y <- c(nT, y)
names(y) <- c("nT", rownames(x))
y
}else{
stop("invalid data type, it should be a data.frame or matrix.")
}
}
BCI = t(BCI)
raw2freq(BCI)
BCI.inc = BCI>0 + 0
BCI.inc
BCI.inc=as.numeric(BCI.inc)
raw2freq(BCI.inc)
install.packages("roxygen2")
Sys.Date()
install.packages("testthat")
devtools::use_testthat()
devtools::test()
devtools::test("tests/testthat.R")
devtools::test("tests/testthat/)
devtools::test("tests/testthat/")
devtools::test("tests/testthat.R")
devtools::test("tests/")
test_check("iNEXT")
library(testthat)
library(iNEXT)
test_check("iNEXT")
nameEx("ChaoSpecies")
?iNEXT
library(iNEXT)
?iNEXT
data(spider)
out <- iNEXT(spider, q=0, datatype="abundance")
spider
out <- iNEXT(spider, q=0, datatype="abundance")
iNEXT(spider, q=0, datatype="abundance")
iNEXT(spider[[1]], q=0, datatype="abundance")
iNEXT(spider[[2]], q=0, datatype="abundance")
iNEXT(spider, q=0, datatype="abundance")
class(spider)
library(iNEXT)
iNEXT(spider, q=0, datatype="abundance")
data("spider")
iNEXT(spider, q=0, datatype="abundance")
out <- iNEXT(spider, q=0, datatype="abundance")
out
names(out)
data(spider)
out <- iNEXT(spider, q=0, datatype="abundance")
expect_equal(length(out), 3)
out$DataInfo
names(out$DataInfo)[1]
?testthat
inherit(out)
inherit()
expect_is
class(out)
names(out[[1]])[1]
names(out$DataInfo)[1]
out$iNextEst
out$AsyEst
out$AsyEst[1]
out$AsyEst[2]
out$AsyEst[3]
data(ant)
out <- iNEXT(ant, q=0, datatype="incidence_freq")
out
str(out)
names(out$DataInfo)[1]
out$AsyEst[1:3]
out$AsyEst[,1]
?iNEXT
class(ant)
data(plant)
plant
out <- iNEXT(plant, q=0, datatype="incidence_raw")
out
ggiNEXT(out)
data(plant)
options(warn=1)
out <- iNEXT(plant, q=0, datatype="incidence_raw")
options(warn=-1)
out <- iNEXT(plant, q=0, datatype="incidence_raw")
names(out$DataInfo)[1]
iNEXT(ant, q=0, datatype="incidence")
out <- iNEXT(plant, q=0, datatype="incidence_raw")
out$AsyEst[1:3]
issue()
swirl::issue()
swirl::swirl()
issue()
chat()
quit()
library(swirl)
swirl()
skip()
library(dplyr)
slip()
skip()
skip()
skip()
library(nycflights13)
nrow(flights)
filter(flights, month==1, day==1)
submit()
issue()
filter(flights, month == 1, day == 2)
target <- filter(flights, dep_delay >0)# 請填寫你的程式碼
nrow(target)
submit()
?grepl
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
as.integer(summarise(slice(flights, 2301:2400), mean(dep_delay, na.rm = TRUE)))
summarise(slice(flights, 2301:2400), mean(dep_delay, na.rm = TRUE))
hint()
skip()
distinct(select(flights, year:day))
mutate(flights, gain = arr_delay - dep_delay)
summarise(flights, mean(dep_delay, na.rm = TRUE))
skip()
sample_frac(flights, 0.01)
gain
summarise(flights, mean(gain))
flights
flights <- mutate(flights, gain=arr_delay - dep_delay)
answer04.1 <- local({
summarise(flights, mean(gain))
# 請填寫你的程式碼
})
answer04.1
stopifnot(class(answer04.1) == "numeric")
head(flights)
data.frame(flights)
data.frame(flights) %>% head()
answer04.1 <- local({
filter(flights, month==1) %>%
summarise(mean(gain))
# 請填寫你的程式碼
})
stopifnot(class(answer04.1) == "numeric")
answer04.1
answer04.1 <- local({
filter(flights, month==1) %>%
summarise(mean(gain, na.rm = T))
# 請填寫你的程式碼
})
stopifnot(class(answer04.1) == "numeric")
answer04.1
answer04.1 <- local({
filter(flights, month==1) %>%
summarise(mean(gain, na.rm = T))  %>%
as.numeric()
# 請填寫你的程式碼
})
stopifnot(class(answer04.1) == "numeric")
stopifnot(length(answer04.1) == 1)
flights$carrier
filter(flights, carrier=="AA")
filter(flights, carrier=="AA") %>% select(tailnum)
filter(flights, carrier=="AA") %>% select(tailnum) %>%
grepl("AA")
filter(flights, carrier=="AA") %>% select(tailnum) %>%
grepl("AA",.,)
filter(flights, carrier=="AA") %>% select(tailnum) %>%
grepl("AA",.,fixed = T)
filter(flights, carrier=="AA") %>% select(tailnum)
filter(flights, carrier=="AA") %>% select(tailnum) %>%
grep("AA",.,fixed = T)
answer04.2 <- local({
filter(flights, carrier=="AA") %>% select(tailnum) %>%
grepl("AA",.,fixed = T)
# 請填寫你的程式碼
# 請給出你的答案： TRUE or FALSE
})
stopifnot(class(answer04.2) == "logical")
stopifnot(length(answer04.2) == 1)
filter(flights, dep_time >=2301, dep_time<=2400) %>%
summarise(mean(dep_delay))
answer04.3 <- local({
filter(flights, dep_time >=2301, dep_time<=2400) %>%
summarise(mean(dep_delay))
# 請填寫你的程式碼
})
stopifnot(class(answer04.3) == "numeric")
answer04.3 <- local({
filter(flights, dep_time >=2301, dep_time<=2400) %>%
summarise(mean(dep_delay)) %>% as.numeric()
# 請填寫你的程式碼
})
stopifnot(class(answer04.3) == "numeric")
stopifnot(length(answer04.3) == 1)
filter(flights, dep_time >=2301, dep_time<=2400) %>%
summarise(mean(dep_delay)) %>% as.numeric()
# 請填寫你的程式碼
filter(flights, dep_time >=1, dep_time<=100) %>%
summarise(mean(dep_delay)) %>% as.numeric()
submit()
filter(flights, carrier=="AA") %>%
select(tailnum)
filter(flights, carrier=="AA") %>%
select(tailnum) %>%
filter(grepl("AA",.,fixed = T))
filter(flights, carrier=="AA") %>%
filter(grepl("AA",tailnum,fixed = T))
a <- filter(flights, carrier=="AA") %>%
filter(grepl("AA",tailnum, fixed = T)) %>%
nrow
b <- nrow(flights)
a==b
submit()
skip()
submit()
submit()
sli
skip()
submit()
answer05
View(cl_info)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
head(flights,1)
?left_join
select(flights, year:day, hour, origin, dest, tailumn, carrier)
select(flights, year:day, hour, origin, dest, tailnum, carrier)
airlines
select(flights, year:day, hour, origin, dest, tailnum, carrier) %>%
slice(100) %>%
left_join(airlines)
submit()
select(flights, year:day, hour, origin, dest, tailnum, carrier) %>%
slice(100) %>%
left_join(airlines, by="carrier")
submit()
skip()
skip()
issue()
answer01 <- local({
select(flights, year:day, hour, origin, dest, tailnum, carrier) %>%
slice(100) %>%
left_join(airlines, by="carrier")
})
answer01
answer01 <- local({
select(flights, year:day, hour, origin, dest, tailnum, carrier) %>%
slice(100) %>%
left_join(y=airlines, by="carrier")
})
answer01
answer02 <- left_join(answer01, weather)
View(answer02)
intersect(colnames(answer01), colnames(weather))
skip()
c("origin" =
| "faa")
c("origin" = "faa")
answer03 <- left_join(answer02, airports, by
| = c("origin" = "faa"))
answer03 <- left_join(answer02, airports, by
= c("origin" = "faa"))
skip()
answer04
submit()
answer03
answer04 <- left_join(answer03, airports, by = c("dest" =
"faa"))
colnames(answer04)
skip()
submit()
skip()
skip()
skip()
wiki_join()
left_join(df1, df2)
right_join(df2, df1)
inner_join(df1,df2)
full_join(df1,df2)
ant_join(df1,df2)
anti_join(df1,df2)
View(df3)
View(df4)
inner_join(df3, df4)
semi_join(df3, df4)
head(gdp_path)
gdp <- read.table(gdp_path)
readLines(gdp_path, n=2)
readLines(gdp_path, n=10)
gdp <- read.table(gdp_path, skip=4)
gdp
gdp <- read.table(gdp_path, skip=4, sep=",")
head(gdp)
readLines(gdp_path, n=10)
gdp <- read.table(gdp_path, skip=4, sep=",") %>%
select(1:2)
gdp
gdp <- read.table(gdp_path, skip=4, sep=",") %>%
select(1:2) %>% slice(132)
gdp
gdp <- read.table(gdp_path, skip=4, sep=",") %>%
select(1:2) %>% slice(1:132)
gdp
gdp <- read.table(gdp_path, skip=4, sep=",") %>%
select(1:2) %>% slice(1:132) %>%
mutate(year=substr(V1,1,4), season=substr(V1,5,6), gdp=gsub(",","",V2)%>%as.numeric())
gdp
gdp <- read.table(gdp_path, skip=4, sep=",") %>%
select(1:2) %>% slice(1:132) %>%
mutate(year=substr(V1,1,4), season=substr(V1,5,6), gdp=gsub(",","",V2)%>%as.numeric()) %>%
group_by(year) %>%
summarise(gdp=sum(gdp))
gdp
stopifnot(is.data.frame(gdp))
stopifnot(colnames(gdp) == c("year", "gdp"))
stopifnot(class(gdp$year) == "character")
stopifnot(class(gdp$gdp) == "numeric")
stopifnot(nrow(gdp) == 33)
stopifnot(range(gdp$year) == c("1981", "2013"))
stopifnot(range(gdp$gdp) == c(1810829,14564242) * 1000000)
range(gdp$gdp)
gdp <- local({
gdp <- read.table(gdp_path, skip=4, sep=",") %>%
select(1:2) %>% slice(1:132) %>%
mutate(year=substr(V1,1,4), season=substr(V1,5,6), gdp=gsub(",","",V2)%>%as.numeric()) %>%
group_by(year) %>%
summarise(gdp=sum(gdp)*10^6)
# 請填寫你的程式碼
})
stopifnot(is.data.frame(gdp))
stopifnot(colnames(gdp) == c("year", "gdp"))
stopifnot(class(gdp$year) == "character")
stopifnot(class(gdp$gdp) == "numeric")
stopifnot(nrow(gdp) == 33)
stopifnot(range(gdp$year) == c("1981", "2013"))
stopifnot(range(gdp$gdp) == c(1810829,14564242) * 1000000)
cl_info
cl_info_year
cl_info %>% head
cl_info %>% mutate(year=substr(etl_dt,1,4),
month=substr(etl_dt,6,7)) %>%
filter(month==1) %>%
group_by(year) %>% summarise(mortgage_bal=sum(mortgage_bal))
cl_info %>% mutate(year=substr(etl_dt,1,4),
month=substr(etl_dt,6,7)) %>%
filter(month=="01") %>%
group_by(year) %>% summarise(mortgage_bal=sum(mortgage_bal))
cl_info %>% mutate(year=substr(etl_dt,1,4),
month=substr(etl_dt,6,7)) %>%
filter(month=="01")
head(cl_info)
cl_info %>% mutate(year=substr(data_dt,1,4),
month=substr(data_dt,6,7)) %>%
filter(month=="01") %>%
group_by(year) %>% summarise(mortgage_bal=sum(mortgage_bal))
cl_info_year <- local({
# 請填寫你的程式碼
cl_info %>% mutate(year=substr(data_dt,1,4),
month=substr(data_dt,6,7)) %>%
filter(month=="01") %>%
group_by(year) %>% summarise(mortgage_bal=sum(mortgage_bal))
})
cl_info_year
stopifnot(is.data.frame(cl_info_year))
stopifnot(colnames(cl_info_year) == c("year", "mortgage_total_bal"))
cl_info_year <- local({
# 請填寫你的程式碼
cl_info %>% mutate(year=substr(data_dt,1,4),
month=substr(data_dt,6,7)) %>%
filter(month=="01") %>%
group_by(year) %>% summarise(mortgage_total_bal=sum(mortgage_bal))
})
stopifnot(is.data.frame(cl_info_year))
stopifnot(colnames(cl_info_year) == c("year", "mortgage_total_bal"))
stopifnot(class(cl_info_year$year) == "character")
stopifnot(class(cl_info_year$mortgage_total_bal) == "numeric")
stopifnot(nrow(cl_info_year) == 9)
stopifnot(range(cl_info_year$year) == c("2006", "2014"))
stopifnot(range(cl_info_year$mortgage_total_bal) == c(3.79632e+12, 5.726784e+12))
